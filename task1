import numpy as np
创建一个长度为10的空向量
Z = np.zeros(10)
print(Z)
创建一个长度为10并且除了第五个值为1的空向量
Z = np.zeros(10)
Z[4] = 1
print(Z)
创建一个值域范围从10到49的向量
Z = np.arange(10,50)
print(Z)
找到数组[1,2,0,0,4,0]中非0元素的位置索引
nz = np.nonzero([1,2,0,0,4,0])
print (z)
(array([0, 1, 4], dtype=int64),)
创建一个 10x10 的随机数组并找到它的最大值和最小值
Z = np.random.random((10,10))
Zmin, Zmax = Z.min(), Z.max()
print(Zmin, Zmax)
0.005113206758701971 0.998984436740067
创建一个二维数组，其中边界值为1，其余值为0 
 Z = np.ones((10,10)
Z[1:-1,1:-1] = 0
print(Z)
[[1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]]
 对于一个存在在数组，如何添加一个用0填充的边界?
 Z = np.ones((5,5))
 Z = np.pad(Z, pad_width=1, mode='constant', constant_values=0)
 print(Z) 
 [[0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 1. 1. 0.]
 [0. 1. 1. 1. 1. 1. 0.]
 [0. 1. 1. 1. 1. 1. 0.]
 [0. 1. 1. 1. 1. 1. 0.]
 [0. 1. 1. 1. 1. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0.]]
  创建一个8x8 的矩阵，并且设置成棋盘样式
  Z = np.zeros((8,8),dtype=int)
  Z[1::2,::2] = 1
  Z[::2,1::2] = 1
  print(Z)
  [[0 1 0 1 0 1 0 1]
 [1 0 1 0 1 0 1 0]
 [0 1 0 1 0 1 0 1]
 [1 0 1 0 1 0 1 0]
 [0 1 0 1 0 1 0 1]
 [1 0 1 0 1 0 1 0]
 [0 1 0 1 0 1 0 1]
 [1 0 1 0 1 0 1 0]]
 对一个5x5的随机矩阵做归一化
 Z = np.random.random((5,5))
 Zmax, Zmin = Z.max(), Z.min()
 Z = (Z - Zmin)/(Zmax - Zmin)
 print(Z)
 [[0.73761171 0.81377181 0.1411713  0.55630107 0.117568  ]
 [0.80156059 0.17902553 0.63177396 0.77085278 0.        ]
 [0.74613397 0.58143618 0.37700911 0.74421664 0.29993415]
 [1.         0.6718782  0.57801227 0.29606673 0.12859584]
 [0.1646138  0.02529283 0.25427525 0.43137478 0.6945773 ]]
 
 一个5x3的矩阵与一个3x2的矩阵相乘，实矩阵乘积是什么？
z = np.dot(np.one((5,3)),np.one((3,2)))
print(z)
[[3. 3.]
 [3. 3.]
 [3. 3.]
 [3. 3.]
 [3. 3.]]
  给定一个一维数组，对其在3到8之间的所有元素取反
z = np.arange(11)

z[(3<z)&(z<=8)]*= -1
print(z)
[ 0  1  2  3 -4 -5 -6 -7 -8  9 10]

如何从零位对浮点数组做舍入 ?
Z = np.random.uniform(-10,+10,10)
print (np.copysign(np.ceil(np.abs(Z)), Z)) 、
[ -2.  -4.  -9.   6.  -5.  -6.   7.  -4. -10. -10.]
 如何得到所有与2016年7月对应的日期？
 Z = np.arange('2016-07', '2016-08', dtype='datetime64[D]')
 print(Z)
 ['2016-07-01' '2016-07-02' '2016-07-03' '2016-07-04' '2016-07-05'
 '2016-07-06' '2016-07-07' '2016-07-08' '2016-07-09' '2016-07-10'
 '2016-07-11' '2016-07-12' '2016-07-13' '2016-07-14' '2016-07-15'
 '2016-07-16' '2016-07-17' '2016-07-18' '2016-07-19' '2016-07-20'
 '2016-07-21' '2016-07-22' '2016-07-23' '2016-07-24' '2016-07-25'
 '2016-07-26' '2016-07-27' '2016-07-28' '2016-07-29' '2016-07-30'
 '2016-07-31']
 
 
 
  
